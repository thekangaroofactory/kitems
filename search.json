[{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://thekangaroofactory.github.io/kitems/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://thekangaroofactory.github.io/kitems/articles/background_item_management.html","id":"use-case-motivation","dir":"Articles","previous_headings":"","what":"Use case & motivation","title":"Background Item Management","text":"xxx.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/background_item_management.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Background Item Management","text":"– create_widget impact – update_widget Need select item first milestones$selected_items(id) – delete_widget Need select item(s) first milestones$selected_items(id) – trigger item update milestonestriggerstriggersupdate(id) – trigger item delete milestonestriggerstriggersdelete(id) actionLink(inputId = paste0(“update_”, milestone$id), label = “edit”, icon = icon(“pen--square”), onclick = sprintf(‘Shiny.setInputValue(“%s”, .id, {priority: “event”})’, ns(“edit_milestone”))) one link, need compute unique Id otherwise warning browser console duplicated id. case, input value must treated observer get id also create global action observer - setInputValue > ‘actions’ - observeEvent(input$actions … get action & id input value xxx.","code":"# -- update observeEvent(input$edit_milestone, {    # -- get id (pattern = \"update_id)   id <- unlist(strsplit(input$edit_milestone, \"_\"))[2]    cat(\"Edit milestone =\", id, \"\\n\")   # ... do something here  }) # -- Module server return value list(id,      url,      items,      data_model,      filtered_items,      selected_items,      clicked_column,      filter_date)"},{"path":"https://thekangaroofactory.github.io/kitems/articles/background_item_management.html","id":"considerations","dir":"Articles","previous_headings":"","what":"Considerations","title":"Background Item Management","text":"Thxxx","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Filtering Items","text":"Kitems provides standard features enable automatic data filtering.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"reminder","dir":"Articles","previous_headings":"","what":"Reminder","title":"Filtering Items","text":"module server returns composite value includes references reactive values: items filtered_items filter_date","code":"# -- call module server mydata <- kitems(id = \"myid\")  # -- access the data mydata$items() mydata$filtered_items() mydata$filter_date()"},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"widgets","dir":"Articles","previous_headings":"","what":"Widgets","title":"Filtering Items","text":"item table widget default filtered view items. displays content filtered_items() . delivered filtered_view_widget function. reason non filtered item table goal display whole list items without filtering, added value compared using renderDT / DTOutput functions directly main Shiny application. now, date filtering support implemented. date slider widget automatically enabled data model contains attribute named ‘date’ (strictly) accessible date_slider_widget function.  behavior driven two strategies: ‘-year’ – automatically selects extends range date belonging current year upon item operations (default). ‘keep-range’ – keeps selected range matter items added removed 1 server initialized, scan items setup dateSliderInput range minimum maximum date column, selected range values fitting current year. 2","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"item-table","dir":"Articles","previous_headings":"","what":"Item table","title":"Filtering Items","text":"item table widget default filtered view items. displays content filtered_items() . delivered filtered_view_widget function. reason non filtered item table goal display whole list items without filtering, added value compared using renderDT / DTOutput functions directly main Shiny application. now, date filtering support implemented.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"date-slider","dir":"Articles","previous_headings":"","what":"Date slider","title":"Filtering Items","text":"date slider widget automatically enabled data model contains attribute named ‘date’ (strictly) accessible date_slider_widget function.  behavior driven two strategies: ‘-year’ – automatically selects extends range date belonging current year upon item operations (default). ‘keep-range’ – keeps selected range matter items added removed 1 server initialized, scan items setup dateSliderInput range minimum maximum date column, selected range values fitting current year. 2","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"reactive-lifecycle","dir":"Articles","previous_headings":"","what":"Reactive lifecycle","title":"Filtering Items","text":"Whenever date range value modified widget, trigger two actions reactive lifecycle module server: filter_date updated value slider input 3 filtered_items updated items fitting selected date range 4","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"considerations","dir":"Articles","previous_headings":"","what":"Considerations","title":"Filtering Items","text":"important notion understand comes initialization filtered_items (view) module server launched, way determine main application implement date slider widget. module server checks data model ‘date’ attribute creates output accessible date_slider_widget function. can’t guess ’s actually going implemented . reason, filtered_items reactive value initialized value items. means, content filtered_items reused within main application - example build plot - strongly advised check filter_date NULL avoid computing plot twice. can done implementing one following options renderPlot expression: check filter input “truthy” req(mydata$filter_date()) use bindEvent function filtered_items ignoreInit = FALSE","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/filtering_items.html","id":"initialization","dir":"Articles","previous_headings":"","what":"Initialization","title":"Filtering Items","text":"important notion understand comes initialization filtered_items (view) module server launched, way determine main application implement date slider widget. module server checks data model ‘date’ attribute creates output accessible date_slider_widget function. can’t guess ’s actually going implemented . reason, filtered_items reactive value initialized value items. means, content filtered_items reused within main application - example build plot - strongly advised check filter_date NULL avoid computing plot twice. can done implementing one following options renderPlot expression: check filter input “truthy” req(mydata$filter_date()) use bindEvent function filtered_items ignoreInit = FALSE","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/module_server_return_value.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Module Server Return Value","text":"module server returns list references accessible outside module. id id used call module (’s also id items linked files) url url item file - ’s needed call save function autosave = FALSE items data frame items (reference reactiveVal) data_model data frame data model (reference reactiveVal) filtered_items data frame filtered items (reference reactiveVal) selected_items vector item id(s) selected rows filtered view table (reference reactiveVal) clicked_column numeric value, indicating column filtered view clicked (reference reactiveVal) filter_date numeric vector, value date slider input range (reference reactiveVal) except id & url references reactive values needs accessed reactive context.","code":"# -- Module server return value list(id,      url,      items,      data_model,      filtered_items,      selected_items,      clicked_column,      filter_date)"},{"path":"https://thekangaroofactory.github.io/kitems/articles/module_server_return_value.html","id":"considerations","dir":"Articles","previous_headings":"","what":"Considerations","title":"Module Server Return Value","text":"magic passing references value copied duplicated.1 data model items copied output, ’s possible access outside module. communication strategy chosen method like passing reactiveValues object argument module ‘feed’ makes code less readable complex implement. also allows use exported functions package outside module server, provides flexible implementation options.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/motivations.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Motivations","text":"goal kitems provide framework manage data frame items set tools implement within R Shiny web applications.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/articles/motivations.html","id":"motivations","dir":"Articles","previous_headings":"","what":"Motivations","title":"Motivations","text":"working R Shiny project performs operations based tabular data, whether data analysis data visualization, first milestone project enable standard data processing. Say purpose project build task manager deliver dashboard follow KPIs. require write code implement baseline project: data frame manage tasks objects (columns corresponding different attributes task: date, description, owner…) data table view display tasks users inputs allow data filtering (maybe focus tasks current year) buttons perform standard operations like create new task, update delete existing ones forms allow user create update task functions manage operations back end (check inputs creating new task, ask confirmation another deleted) functions ensure data persistence, quality management general Now say another project build dashboard follow fruit stock. data frame fruit objects needed, table view, buttons & functions perform standard operations… many cases, involves write code allows handle set operations different objects, makes code hard reuse another project. purpose kitems wrap standard operations package dependent type item - something part list group things - manage. developers can focus specific capabilities project.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"philippe peret. Author, maintainer.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"peret p (2025). kitems: Framework Manage Data Frame Items. R package version 0.6.1, https://thekangaroofactory.github.io/kitems/.","code":"@Manual{,   title = {kitems: A Framework To Manage Data Frame Items},   author = {philippe peret},   year = {2025},   note = {R package version 0.6.1},   url = {https://thekangaroofactory.github.io/kitems/}, }"},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"kitems","dir":"","previous_headings":"","what":"A Framework To Manage Data Frame Items","title":"A Framework To Manage Data Frame Items","text":"goal kitems provide framework manage data frame items set tools implement within Shiny web applications. delivered Shiny module.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Framework To Manage Data Frame Items","text":"development (beta) version kitems can installed GitHub : Note package development convergence. Features may still modified stage, guaranty exported functions signature change converged.","code":"# install.packages(\"devtools\") devtools::install_github(\"thekangaroofactory/kitems\")"},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"demo","dir":"","previous_headings":"","what":"Demo","title":"A Framework To Manage Data Frame Items","text":"Demo apps delivered together package can accessed :","code":"library(kitems)  # -- get example demo name runExample()"},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"framework-specifications","dir":"","previous_headings":"","what":"Framework Specifications","title":"A Framework To Manage Data Frame Items","text":"kitems framework based two main notions - data model items.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"data-model","dir":"","previous_headings":"Framework Specifications","what":"Data Model","title":"A Framework To Manage Data Frame Items","text":"data model contains specifications items manage. attribute, data model carries information like name type, also method determine default value logical values indicate skipped forms, filtered table view used sort data. Supported types numeric, integer, logical, character, factor, Date POSIXct. Note: class POSIXlt supported stores datetime values list POSIXct used store datetime attributes.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"items","dir":"","previous_headings":"Framework Specifications","what":"Items","title":"A Framework To Manage Data Frame Items","text":"Items stored data frame fits data model rules. means data model implemented functions related item management.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"path","dir":"","previous_headings":"Framework Specifications","what":"Path","title":"A Framework To Manage Data Frame Items","text":"data model & item files stored specific folder dedicated instance module. folder named id module. reason, unless single instance module, recommended name id name last folder provided path. Example: path = \"./path//data\" & id = \"data\" store files “./path//data” path = \"./path//data\" & id = \"data_1\" store files “./path//data/data_1” may result files stored different levels.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"reactive-values","dir":"","previous_headings":"","what":"Reactive Values","title":"A Framework To Manage Data Frame Items","text":"kitems strongly relies Shiny (shiny shinydashboard packages set ‘depends’ dependencies). delivers reactive values accessible module server return value. return value following structure: Data model items reactive values handled caution updating values trigger auto save (autosave = TRUE).","code":"list(id,      url,      items,      data_model,      filtered_items,      selected_items,      clicked_column,      filter_date)"},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"data-model-1","dir":"","previous_headings":"Reactive Values","what":"Data Model","title":"A Framework To Manage Data Frame Items","text":"data model can accessed reactive context return value list, data_model()","code":"library(kitems)  # -- call module mydata <- kitems_server(id = \"my_data_id\", path = \"path/to/my/data\")  # -- get data model data_model <- mydata$data_model()"},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"items-1","dir":"","previous_headings":"Reactive Values","what":"Items","title":"A Framework To Manage Data Frame Items","text":"items id can accessed reactive context return value list, items()","code":"# -- call module mydata <- kitems_server(id = \"my_data_id\", path = \"path/to/my/data\")  # -- get items items <- mydata$items()"},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"observe-reactive-values","dir":"","previous_headings":"Reactive Values","what":"Observe reactive values","title":"A Framework To Manage Data Frame Items","text":"module server return value holds references reactives values. example observe items: Note: observing filtered_items main application, ’s recommended add ignoreInit = TRUE parameter (use bindEvent render* functions) order avoid multiple computations start-.","code":"# -- Call module server mydata <- kitems(id = \"mydata\", path = \"./data\")  # -- Observe items observeEvent(mydata$items(), {   print(\"Main application server: items object has just been updated.\")   # -- do something cool here   })"},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"initialization","dir":"","previous_headings":"Data model","what":"Initialization","title":"A Framework To Manage Data Frame Items","text":"starting module id path arguments, check corresponding data model available destination path. data model found, admin UI display button create new data model, well button import data (creates data model data).","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"checking-integrity","dir":"","previous_headings":"Data model","what":"Checking integrity","title":"A Framework To Manage Data Frame Items","text":"module server launched, perform integrity check ensure items data model synchronized. , data model updated match missing attribute example. Items checked well make sure attribute types fit data model.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"item-management","dir":"","previous_headings":"","what":"Item management","title":"A Framework To Manage Data Frame Items","text":"create update buttons triggers dynamic form built based data model. Attributes defined skipped won’t get input form. inputs initialized default values output default functions defined. form completed, check performed make sure values match attribute types. value provided attribute, default applied.","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"filtered-view","dir":"","previous_headings":"Views","what":"Filtered view","title":"A Framework To Manage Data Frame Items","text":"filtered view, based filtered_items content delivered data model masks applied. Filtered attributes hidden, items ordered defined data model.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"selected-items","dir":"","previous_headings":"","what":"Selected Item(s)","title":"A Framework To Manage Data Frame Items","text":"filtered view row selection enabled. Selecting row(s) table trigger update selected_items reactive value. Selected item(s) also trigger buttons available (delete visible item selected).","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"date-sliderinput","dir":"","previous_headings":"Inputs","what":"Date sliderInput","title":"A Framework To Manage Data Frame Items","text":"data model attribute named ‘date’, date sliderInput created automatically enable date filtering. implemented main application UI, impact filtered items.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"buttons","dir":"","previous_headings":"Inputs","what":"Buttons","title":"A Framework To Manage Data Frame Items","text":"Standard buttons delivered trigger module server actions. implemented separate UI functions ’s possible wrap complex UI function. create update (single item selection) delete (supports multi-selection)","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"admin-console","dir":"","previous_headings":"Administration","what":"Admin console","title":"A Framework To Manage Data Frame Items","text":"admin console delivered standalone Shiny app. reason cases, ’s recommended data model(s) management accessible within application. admin console gives access data models belonging path argument one place.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/index.html","id":"nested-module-considerations","dir":"","previous_headings":"","what":"Nested module considerations","title":"A Framework To Manage Data Frame Items","text":"case kitems module server function called inside module (.e. nested module), possible call UI functions main app nested module id. , two options available: wrap package UI functions functions calling module (encapsulation) example, create UI function implements different buttons single UI delivered calling module. call package UI functions directly main app using multiple namespaces: (specified shiny::NS function)","code":"kitems::admin_widget(c(\"module_id\", \"nested_module_id\"))"},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin.html","id":null,"dir":"Reference","previous_headings":"","what":"Kitems Admin Console — admin","title":"Kitems Admin Console — admin","text":"Launches administration console (Shiny App)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kitems Admin Console — admin","text":"","code":"admin(path = getwd())"},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kitems Admin Console — admin","text":"path path find item folder(s)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kitems Admin Console — admin","text":"app scan path detect sub folders expected item folders named id used create . build ui list.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kitems Admin Console — admin","text":"","code":"if (FALSE) { # \\dontrun{ admin() } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Admin Widget — admin_widget","title":"Admin Widget — admin_widget","text":"Admin Widget","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Admin Widget — admin_widget","text":"","code":"admin_widget(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Admin Widget — admin_widget","text":"id module id","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Admin Widget — admin_widget","text":"tagList() object admin data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/admin_widget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Admin Widget — admin_widget","text":"","code":"admin_widget(id = \"mydata\") #> <div class=\"row\"> #>   <div class=\"col-sm-2 well\"> #>     <ul class=\"nav nav-pills nav-stacked\" data-tabsetid=\"3771\"> #>       <li class=\"navbar-brand\">Administration console<\/li> #>       <li class=\"active\"> #>         <a href=\"#tab-3771-2\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Data model\">Data model<\/a> #>       <\/li> #>       <li> #>         <a href=\"#tab-3771-3\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"Raw table\">Raw table<\/a> #>       <\/li> #>       <li> #>         <a href=\"#tab-3771-4\" data-toggle=\"tab\" data-bs-toggle=\"tab\" data-value=\"View\">View<\/a> #>       <\/li> #>     <\/ul> #>   <\/div> #>   <div class=\"col-sm-10\"> #>     <div class=\"tab-content\" data-tabsetid=\"3771\"> #>       <div class=\"tab-pane active\" data-value=\"Data model\" id=\"tab-3771-2\"> #>         <div class=\"well\"> #>           <h3>Name:  mydata<\/h3> #>           <div id=\"mydata-admin-dm_tab\" class=\"shiny-html-output\"><\/div> #>         <\/div> #>       <\/div> #>       <div class=\"tab-pane\" data-value=\"Raw table\" id=\"tab-3771-3\"> #>         <div class=\"well\"> #>           <h3>Name:  mydata<\/h3> #>           <div id=\"mydata-admin-raw_tab\" class=\"shiny-html-output\"><\/div> #>         <\/div> #>       <\/div> #>       <div class=\"tab-pane\" data-value=\"View\" id=\"tab-3771-4\"> #>         <div class=\"well\"> #>           <h3>Name:  mydata<\/h3> #>           <div id=\"mydata-admin-masked_tab\" class=\"shiny-html-output\"><\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div>"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Add attribute to a data model — attribute_create","title":"Add attribute to a data model — attribute_create","text":"Add attribute data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add attribute to a data model — attribute_create","text":"","code":"attribute_create(   data.model,   name,   type,   default.val = NULL,   default.fun = NULL,   default.arg = NULL,   filter = NULL,   skip = NULL,   sort.rank = NULL,   sort.desc = NULL )"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add attribute to a data model — attribute_create","text":"data.model mandatory data model, structured output data_model() function name mandatory character string new attribute name type mandatory character string new attribute type default.val optional named vector values, defining default values. default.fun optional named vector functions, defining default functions used generate default values. default.arg optional named vector arguments, pass along default function. filter optional character vector, name(s) attribute(s) filter skip optional character vector, name(s) attribute(s) skip sort.rank optional named numeric vector, define sort orders sort.desc optional named logical vector, define sort descending","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add attribute to a data model — attribute_create","text":"updated data model","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add attribute to a data model — attribute_create","text":"","code":"if (FALSE) { # \\dontrun{ attribute_create(data.model = mydatamodel, name = \"new_attribute\", type = \"character\") attribute_create(data.model = mydatamodel, name = \"total\", type = \"numeric\", default.val = 0) attribute_create(data.model = mydatamodel, name = \"date\", type = \"Date\", default.fun = \"Sys.Date\") attribute_create(data.model = mydatamodel, name = \"progress\", type = \"integer\", skip = \"progress\") attribute_create(data.model = mydatamodel, name = \"internal\", type = \"logical\", filter = \"internal\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete attribute — attribute_delete","title":"Delete attribute — attribute_delete","text":"Delete attribute","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete attribute — attribute_delete","text":"","code":"attribute_delete(   k_data_model,   k_items,   name,   MODULE = NULL,   autosave = FALSE,   dm_url = NULL,   items_url = NULL,   notify = FALSE )"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete attribute — attribute_delete","text":"k_data_model reference data model reactive value k_items reference items reactive value name name attribute delete MODULE optional string displayed notification autosave logical autosave dm_url url data model file items_url url item file notify logical shiny notification fired","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete attribute — attribute_delete","text":"","code":"if (FALSE) { # \\dontrun{ attribute_delete(k_data_model, k_items, name = \"comment\", MODULE = \"mydata\", autosave = TRUE, dm_url = dm_url, items_url = items_url, notify = TRUE) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Attribute Input — attribute_input","title":"Build Attribute Input — attribute_input","text":"Build Attribute Input","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Attribute Input — attribute_input","text":"","code":"attribute_input(colClass, value = NULL, ns)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Attribute Input — attribute_input","text":"colClass length-one named vector. names(colClass) name attribute, colClass type (class) attribute. value value used initialize input ns module namespace function reference","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Attribute Input — attribute_input","text":"input based colClass","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Attribute Input — attribute_input","text":"","code":"if (FALSE) { # \\dontrun{ attribute_input(colClass = c(name = \"character\"), ns) attribute_input(colClass = c(total = \"numeric\"), value = 10, ns) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Attribute Input — attribute_input_update","title":"Update Attribute Input — attribute_input_update","text":"Update Attribute Input","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Attribute Input — attribute_input_update","text":"","code":"attribute_input_update(data.model, shortcut_trigger, MODULE = NULL)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Attribute Input — attribute_input_update","text":"data.model reference data model reactiveVal shortcut_trigger basically value input$shortcut_trigger MODULE optional character string trace","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_input_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Attribute Input — attribute_input_update","text":"","code":"if (FALSE) { # \\dontrun{ attribute_input_update( data.model = mydata$data_model, shortcut_trigger = \"name_banana\", MODULE = \"(mydata)\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_shortcut.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Attribute Shortcuts — attribute_shortcut","title":"Build Attribute Shortcuts — attribute_shortcut","text":"Build Attribute Shortcuts","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_shortcut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Attribute Shortcuts — attribute_shortcut","text":"","code":"attribute_shortcut(colClass, suggestions, ns)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_shortcut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Attribute Shortcuts — attribute_shortcut","text":"colClass length-one named vector. names(colClass) name attribute, colClass type (class) attribute. suggestions list suggestions, output attribute_suggestion ns module namespace function reference","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_shortcut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Attribute Shortcuts — attribute_shortcut","text":"list actionLink objects return value output lapply applying actionLink suggestions actionLink onclick property trigger input$shortcut_trigger (ns(shortcut_trigger)) value form [ns]-[attribute]_[value] Basically, applying tail(unlist(strsplit(input$shortcut_trigger, split = \"-\")), 1) access attribute_value Note POSIXct attribute, shortcut_trigger input carry timezone information. Clicking corresponding actionLink trigger date & time inputs update.","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_shortcut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Attribute Shortcuts — attribute_shortcut","text":"","code":"if (FALSE) { # \\dontrun{ attribute_shortcut(colClass = c(name = \"character\"), suggestions = list(mango = 25, banana = 12, lemon = 10), ns = session$ns) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_suggestion.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribute Suggestions — attribute_suggestion","title":"Attribute Suggestions — attribute_suggestion","text":"Attribute Suggestions","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_suggestion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute Suggestions — attribute_suggestion","text":"","code":"attribute_suggestion(values, type = class(values), n = 3, floor = 10)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_suggestion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attribute Suggestions — attribute_suggestion","text":"values vector values, probably vector corresponding one item data frame columns type optional character vector, type (class) values. provided, class(values) used n desired number suggestions. applies character, factor, numeric & integer types floor numeric value. applies numeric & integer types. none value frequency (%) reaches floor, basic suggestions returned (see details)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_suggestion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attribute Suggestions — attribute_suggestion","text":"list suggestions list depends type values character, factor: frequent values ; list(value1 = frequency, value_2, = frequency) numeric, integer: frequent values ; list(value1 = frequency, value_2, = frequency), standard list ; list(min, max, mean, median) logical: frequency values ; list(true = frequency, false = frequency) Date, POSIXct: standard list ; list(min, max)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_suggestion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attribute Suggestions — attribute_suggestion","text":"numeric & integer values, default strategy compute n frequent occurrences. occurrence reaches floor level (% items), standard list returned.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_suggestion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attribute Suggestions — attribute_suggestion","text":"","code":"foo <- c(rep(\"banana\", 5), rep(\"mango\", 3), rep(\"orange\", 2)) attribute_suggestion(values = foo, type = \"character\") #> $banana #> [1] 50 #>  #> $mango #> [1] 30 #>  #> $orange #> [1] 20 #>"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update data model attribute — attribute_update","title":"Update data model attribute — attribute_update","text":"Update data model attribute","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update data model attribute — attribute_update","text":"","code":"attribute_update(   data.model,   name,   default.val = NULL,   default.fun = NULL,   default.arg = NULL,   skip = NULL,   filter = NULL,   sort.rank = NULL,   sort.desc = NULL )"},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update data model attribute — attribute_update","text":"data.model data.frame containing data model name character string attribute name default.val character string, new default value default.fun character string, new default function name default.arg optional named vector arguments, pass along default function. skip logical set skip value filter logical set filter value sort.rank numeric, used define sort rank sort.desc logical, define sorting descending order","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update data model attribute — attribute_update","text":"updated data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_update.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update data model attribute — attribute_update","text":"Updating attribute class supported function (requires data migration). Use vector update several attributes supported long length different parameters either name 1 (rows gets value).","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/reference/attribute_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update data model attribute — attribute_update","text":"","code":"if (FALSE) { # \\dontrun{ #Use of vector to update several attributes: attribute_update(data.model = dm,                  name = c(\"name\",\"total\"),                  default.val = c(\"test\", 2),                  default.fun = NULL,                  default.arg = NULL,                  skip = TRUE) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/backup.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup Data Model & Items Files — backup","title":"Backup Data Model & Items Files — backup","text":"Backup Data Model & Items Files","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/backup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup Data Model & Items Files — backup","text":"","code":"backup(id, path, type = \"items\", max = NULL)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/backup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup Data Model & Items Files — backup","text":"id kitems id used create data model path path data model type type file backup. items (default) dm max integer indicate many backup files allowed","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/backup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Backup Data Model & Items Files — backup","text":"Backup file named id_data_model_YYYY-MM-DD.rds file already exists, overwritten. number backup files exceeds max oldest deleted. Whenever max = NULL (default), replaced 1","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/backup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backup Data Model & Items Files — backup","text":"","code":"if (FALSE) { # \\dontrun{ backup(id = \"mydata\", path = \"path/to/my/data\", max = 2) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/create_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Item Button — create_widget","title":"Create Item Button — create_widget","text":"Create Item Button","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/create_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Item Button — create_widget","text":"","code":"create_widget(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/create_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Item Button — create_widget","text":"id server module id","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/create_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Item Button — create_widget","text":"rendered actionButton","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/create_widget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Item Button — create_widget","text":"","code":"create_widget(id = \"mydata\") #> <span id=\"mydata-item_create\" class=\"shiny-html-output\"><\/span>"},{"path":"https://thekangaroofactory.github.io/kitems/reference/danger_zone_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Danger Zone Widget — danger_zone_widget","title":"Danger Zone Widget — danger_zone_widget","text":"Danger Zone Widget","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/danger_zone_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Danger Zone Widget — danger_zone_widget","text":"","code":"danger_zone_widget(k_data_model, ns)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/danger_zone_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Danger Zone Widget — danger_zone_widget","text":"k_data_model reference data model reactive value ns namespace function","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/danger_zone_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Danger Zone Widget — danger_zone_widget","text":"tagList object","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/danger_zone_widget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Danger Zone Widget — danger_zone_widget","text":"","code":"if (FALSE) { # \\dontrun{ danger_zone_widget(k_data_model, ns) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Build data model — data_model","title":"Build data model — data_model","text":"Build data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build data model — data_model","text":"","code":"data_model(   colClasses,   default.val = NULL,   default.fun = NULL,   default.arg = NULL,   filter = NULL,   skip = NULL,   sort.rank = NULL,   sort.desc = NULL )"},{"path":"https://thekangaroofactory.github.io/kitems/reference/data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build data model — data_model","text":"colClasses mandatory named vector classes, defining data model. default.val optional named vector values, defining default values. default.fun optional named vector functions, defining default functions used generate default values. default.arg optional named vector arguments, pass along default function. filter optional character vector, indicating attribute names filtered table view. skip optional character vector, indicating attribute names skipped user input form. sort.rank optional named numeric vector, define sort orders. sort.desc optional named logical vector, define sort descending.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/data_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build data model — data_model","text":"data.frame containing data model.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/data_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build data model — data_model","text":"colClasses used create data.frame: names define attributes data model, values define class (type) attributes. default.* parameters optional. provided, used match names defined colClasses: order vectors matter need set values attributes (see examples) names vectors matching colClasses names ignored default.fun default.val mutual exclusive, priority default.fun (default.val forced NA) default.arg requires default.fun NULL (forced NA otherwise) filter skip directly contains names attributes set TRUE provided, defaults applied: NA default.val, default.fun default.arg FALSE filter skip","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/data_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build data model — data_model","text":"","code":"# -- order in vectors doesn't matter: default.val <- c(\"name\" = \"test\", \"total\" = 2) default.val <- c(\"total\" = 2, \"name\" = \"test\")  # -- no need to set all values colClasses <- c(\"id\" = \"numeric\", \"name\" = \"character\", \"total\" = \"numeric\") default.val <- c(\"name\" = \"test\", \"total\" = 2)  # -- filter and skip filter <- \"id\" skip <- c(\"id\", \"date\")  # -- sort sort.rank = c(\"date\" = 1, \"total\" = 2, \"name\" = 3) sort.desc = c(\"date\" = TRUE, \"total\" = FALSE)  data_model(colClasses, default.val, filter = filter, skip = skip) #>    name      type default.val default.fun default.arg filter  skip sort.rank #> 1    id   numeric        <NA>          NA          NA   TRUE  TRUE        NA #> 2  name character        test          NA          NA  FALSE FALSE        NA #> 3 total   numeric           2          NA          NA  FALSE FALSE        NA #>   sort.desc #> 1        NA #> 2        NA #> 3        NA"},{"path":"https://thekangaroofactory.github.io/kitems/reference/date_slider_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Date slider Widget — date_slider_widget","title":"Date slider Widget — date_slider_widget","text":"Date slider Widget","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/date_slider_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date slider Widget — date_slider_widget","text":"","code":"date_slider_widget(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/date_slider_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date slider Widget — date_slider_widget","text":"id server module id","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/date_slider_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date slider Widget — date_slider_widget","text":"ui object (output fluidRow)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/date_slider_widget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date slider Widget — date_slider_widget","text":"","code":"date_slider_widget(id = \"mydata\") #> <div class=\"row\"> #>   <div class=\"col-sm-6\"> #>     <div id=\"mydata-date_slider\" class=\"shiny-html-output\"><\/div> #>   <\/div> #>   <div class=\"col-sm-6\"> #>     <div id=\"mydata-date_slider_strategy\" class=\"shiny-html-output\"><\/div> #>   <\/div> #> <\/div>"},{"path":"https://thekangaroofactory.github.io/kitems/reference/delete_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Item Button — delete_widget","title":"Delete Item Button — delete_widget","text":"Delete Item Button","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/delete_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Item Button — delete_widget","text":"","code":"delete_widget(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/delete_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Item Button — delete_widget","text":"id server module id","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/delete_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Item Button — delete_widget","text":"rendered actionButton","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/delete_widget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete Item Button — delete_widget","text":"","code":"delete_widget(id = \"mydata\") #> <span id=\"mydata-item_delete\" class=\"shiny-html-output\"><\/span>"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_colClasses.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract colClasses from data model — dm_colClasses","title":"Extract colClasses from data model — dm_colClasses","text":"Extract colClasses data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_colClasses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract colClasses from data model — dm_colClasses","text":"","code":"dm_colClasses(data.model = NULL)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_colClasses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract colClasses from data model — dm_colClasses","text":"data.model data.frame containing data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_colClasses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract colClasses from data model — dm_colClasses","text":"named vector attribute types","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_colClasses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract colClasses from data model — dm_colClasses","text":"","code":"if (FALSE) { # \\dontrun{ dm_colClasses(data.model = mydatamodel) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute default value for an attribute — dm_default","title":"Compute default value for an attribute — dm_default","text":"Compute default value attribute","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute default value for an attribute — dm_default","text":"","code":"dm_default(data.model, name)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute default value for an attribute — dm_default","text":"data.model data.frame containing data model name character string attribute name","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute default value for an attribute — dm_default","text":"default value computed output default function","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute default value for an attribute — dm_default","text":"","code":"if (FALSE) { # \\dontrun{ value <- dm_default(data.model = mydatamodel, name = \"date\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete data model — dm_delete","title":"Delete data model — dm_delete","text":"Delete data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete data model — dm_delete","text":"","code":"dm_delete(data.model, items, dm_url, items_url, autosave, item.file)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete data model — dm_delete","text":"data.model reference data model reactive value items reference items reactive value dm_url url (path + filename) data model items_url url (path + filename) items autosave logical data saved item.file logical item file deleted","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete data model — dm_delete","text":"","code":"if (FALSE) { # \\dontrun{ dm_delete(data.model = mydata$data_model, items = mydata$items, dm_url, items_url, autosave = TRUE, item.file = TRUE) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Data model delete preview modal — dm_delete_preview","title":"Data model delete preview modal — dm_delete_preview","text":"Data model delete preview modal","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data model delete preview modal — dm_delete_preview","text":"","code":"dm_delete_preview(   hasItems = FALSE,   dm.file = FALSE,   item.file = FALSE,   autosave = FALSE,   id = NULL,   ns )"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data model delete preview modal — dm_delete_preview","text":"hasItems logical items (items data frame NULL) dm.file logical data model file exists item.file logical item file exists autosave logical autosave id id module ns namespace function used","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data model delete preview modal — dm_delete_preview","text":"modalDialog","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_delete_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data model delete preview modal — dm_delete_preview","text":"","code":"if (FALSE) { # \\dontrun{ dm_delete_preview(hasItems = TRUE, dm.file = TRUE, item.file = TRUE, autosave = TRUE, id = \"mydata\", ns = ns) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Data model attribute filter — dm_filter","title":"Data model attribute filter — dm_filter","text":"Data model attribute filter","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data model attribute filter — dm_filter","text":"","code":"dm_filter(data.model, set = NULL)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data model attribute filter — dm_filter","text":"data.model data.frame containing data model set optional character vector name attributes set filtered","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data model attribute filter — dm_filter","text":"either list attributes filtered updated data model set NULL","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data model attribute filter — dm_filter","text":"filter NULL, data model passed data.model returned","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data model attribute filter — dm_filter","text":"","code":"if (FALSE) { # \\dontrun{ dm_filter(data.model = mydatamodel, filter = c(\"id\", \"internal\")) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_integrity.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data model integrity — dm_integrity","title":"Check data model integrity — dm_integrity","text":"Check data model integrity","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_integrity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data model integrity — dm_integrity","text":"","code":"dm_integrity(data.model, items, template = NULL)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_integrity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data model integrity — dm_integrity","text":"data.model mandatory data model items mandatory item data.frame template optional data.frame(name = c(...), type = c(...)) used force attribute classes","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_integrity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data model integrity — dm_integrity","text":"data model matches data, TRUE returned. Otherwise updated data model returned.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_integrity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check data model integrity — dm_integrity","text":"case attribute missing data model, added either type matching template one guessed one (using class() function). case extra attribute found data model compared items, dropped data model.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_integrity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check data model integrity — dm_integrity","text":"","code":"if (FALSE) { # \\dontrun{ feedback <- dm_integrity(mydatamodel, myitems) if(!is.logical(feedback))   mydatamodel <- feedback } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply mask on data model table — dm_mask","title":"Apply mask on data model table — dm_mask","text":"Apply mask data model table","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply mask on data model table — dm_mask","text":"","code":"dm_mask(data.model)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply mask on data model table — dm_mask","text":"data.model data.frame data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply mask on data model table — dm_mask","text":"data.frame renamed columns","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply mask on data model table — dm_mask","text":"","code":"if (FALSE) { # \\dontrun{ dm_mask(data.model = dm) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_migrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Migrate data model — dm_migrate","title":"Migrate data model — dm_migrate","text":"Migrate data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_migrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migrate data model — dm_migrate","text":"","code":"dm_migrate(data.model, name)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_migrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Migrate data model — dm_migrate","text":"data.model data.frame data model name named list missing columns (probably subset target colClasses)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_migrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Migrate data model — dm_migrate","text":"migrated data.model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_migrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Migrate data model — dm_migrate","text":"","code":"if (FALSE) { # \\dontrun{ dm_migrate(data.model, name = list(default.arg = \"character\")) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Data model name — dm_name","title":"Data model name — dm_name","text":"Data model name","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data model name — dm_name","text":"","code":"dm_name(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data model name — dm_name","text":"id id module server instance","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data model name — dm_name","text":"name corresponding reactive value","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dm_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data model name — dm_name","text":"","code":"dm_name(id = \"mydata\") #> [1] \"mydata_data_model\""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dynamic_sidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Dynamic menuItem — dynamic_sidebar","title":"Generate Dynamic menuItem — dynamic_sidebar","text":"Generate Dynamic menuItem","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dynamic_sidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Dynamic menuItem — dynamic_sidebar","text":"","code":"dynamic_sidebar(names)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/dynamic_sidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Dynamic menuItem — dynamic_sidebar","text":"names list data model names","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dynamic_sidebar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Dynamic menuItem — dynamic_sidebar","text":"sidebarMenu menuItem object one menuSubItem per data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/dynamic_sidebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Dynamic menuItem — dynamic_sidebar","text":"","code":"if (FALSE) { # \\dontrun{ dynamic_sidebar(names = list(\"data\", \"data2\")) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/filtered_view_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtered View Widget — filtered_view_widget","title":"Filtered View Widget — filtered_view_widget","text":"Filtered View Widget","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/filtered_view_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtered View Widget — filtered_view_widget","text":"","code":"filtered_view_widget(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/filtered_view_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtered View Widget — filtered_view_widget","text":"id id module server instance","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/filtered_view_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtered View Widget — filtered_view_widget","text":"rendered DT data table","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/filtered_view_widget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtered View Widget — filtered_view_widget","text":"","code":"filtered_view_widget(id = \"mydata\") #> <div class=\"shiny-panel-conditional\" data-display-if=\"document.getElementById(&quot;mydata-filtered_view&quot;).children.length==0\" data-ns-prefix=\"\"> #>   <p>All attributes are filtered, the table is empty.<\/p> #> <\/div> #> <div class=\"datatables html-widget html-widget-output shiny-report-size html-fill-item\" id=\"mydata-filtered_view\" style=\"width:100%;height:auto;\"><\/div>"},{"path":"https://thekangaroofactory.github.io/kitems/reference/hasDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Test date attribute — hasDate","title":"Test date attribute — hasDate","text":"Test date attribute","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/hasDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test date attribute — hasDate","text":"","code":"hasDate(data.model)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/hasDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test date attribute — hasDate","text":"data.model data.frame containing data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/hasDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test date attribute — hasDate","text":"logical, TRUE data model attribute 'date' (exact match)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/hasDate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test date attribute — hasDate","text":"","code":"if (FALSE) { # \\dontrun{ hasDate(data.model = mydatamodel) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add item — item_add","title":"Add item — item_add","text":"Add item","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add item — item_add","text":"","code":"item_add(items, item)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add item — item_add","text":"items data.frame items item item data.frame added","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add item — item_add","text":"new data.frame items","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add item — item_add","text":"","code":"if (FALSE) { # \\dontrun{ item_add(items = myitems, item = mynewitem) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_chk_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Item Structure — item_chk_str","title":"Check Item Structure — item_chk_str","text":"Check Item Structure","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_chk_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Item Structure — item_chk_str","text":"","code":"item_chk_str(items, item)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_chk_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Item Structure — item_chk_str","text":"items data.frame items item item tested","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_chk_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Item Structure — item_chk_str","text":"either TRUE error","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_chk_str.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Item Structure — item_chk_str","text":"function check item vs data model used internally item creation update (data model available context)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_chk_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Item Structure — item_chk_str","text":"","code":"if (FALSE) { # \\dontrun{ item_chk_str(items, item) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new item — item_create","title":"Create a new item — item_create","text":"Create new item","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new item — item_create","text":"","code":"item_create(values, data.model)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new item — item_create","text":"values list values, likely output values coming UI inputs data.model data.frame, defining data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new item — item_create","text":"data.frame new item, coerced match colClasses","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new item — item_create","text":"","code":"if (FALSE) { # \\dontrun{ item_create(values, data.model = mydatamodel) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete item — item_delete","title":"Delete item — item_delete","text":"Delete item","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete item — item_delete","text":"","code":"item_delete(items, id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete item — item_delete","text":"items data.frame items id id item delete","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete item — item_delete","text":"new data.frame items","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete item — item_delete","text":"","code":"if (FALSE) { # \\dontrun{ item_delete(items = myitems, id = 123456789) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Item Form — item_form","title":"Build Item Form — item_form","text":"Build Item Form","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Item Form — item_form","text":"","code":"item_form(data.model, items, update = FALSE, item = NULL, shortcut = FALSE, ns)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Item Form — item_form","text":"data.model data.frame data model items data.frame items update optional logical (default = FALSE) trigger update behavior item optional item (used set default input values update = TRUE) shortcut logical indicate shortcuts displayed ns namespace function, output shiny::NS()","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Item Form — item_form","text":"tagList() object containing attribute inputs","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_form.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build Item Form — item_form","text":"Data model skip feature used return inputs skip = FALSE attributes","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Item Form — item_form","text":"","code":"if (FALSE) { # \\dontrun{ item_form(data.model = mydata$data_model(), update = FALSE, item = NULL, ns) item_form(data.model = mydata$data_model(), update = TRUE, item = myitem, ns) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_input_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Build list of input values — item_input_values","title":"Build list of input values — item_input_values","text":"Build list input values","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_input_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build list of input values — item_input_values","text":"","code":"item_input_values(input, colClasses)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_input_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build list of input values — item_input_values","text":"input input object shiny module colClasses named vector classes, defining data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_input_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build list of input values — item_input_values","text":"list values","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_input_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build list of input values — item_input_values","text":"output list contain many entries colClasses named vector. case names corresponding item input parameter, get NULL value output list.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_input_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build list of input values — item_input_values","text":"","code":"if (FALSE) { # \\dontrun{ values <- item_input_values(input, colClasses = c(\"date\" = \"Date\", \"text\" = \"character\")) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_integrity.html","id":null,"dir":"Reference","previous_headings":"","what":"Check items integrity — item_integrity","title":"Check items integrity — item_integrity","text":"Check items integrity","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_integrity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check items integrity — item_integrity","text":"","code":"item_integrity(items, data.model)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_integrity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check items integrity — item_integrity","text":"items data.frame items data.model data.frame data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_integrity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check items integrity — item_integrity","text":"data.frame items, corrected attribute types","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_integrity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check items integrity — item_integrity","text":"function checks class attributes items matches one data model. , coerce values corresponding column data model class.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_integrity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check items integrity — item_integrity","text":"","code":"if (FALSE) { # \\dontrun{ items <- item_integrity(items, data.model) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data — item_load","title":"Load data — item_load","text":"Load data","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data — item_load","text":"","code":"item_load(col.classes, file = NULL, path = NULL)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data — item_load","text":"col.classes vector containing expected column types file optional file name (including .csv extension) path optional path file","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data — item_load","text":"data (items)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_load.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load data — item_load","text":"File connector: file NULL, data loaded given .csv","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data — item_load","text":"","code":"if (FALSE) { # \\dontrun{ # -- File connector: item_load(col.classes = c(id = \"numeric\", date = \"Date\", comment = \"character\"), file = \"mydata.csv\", path = \"path/to/my/data\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply mask — item_mask","title":"Apply mask — item_mask","text":"Apply mask","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply mask — item_mask","text":"","code":"item_mask(data.model, items)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply mask — item_mask","text":"data.model data.frame data model items data.frame items","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply mask — item_mask","text":"data.frame items applied masks","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply mask — item_mask","text":"Two masks applied: data model masks (filter = TRUE) default mask (replace . _ space attribute names, plus capitalize first letter)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply mask — item_mask","text":"","code":"if (FALSE) { # \\dontrun{ item_mask(data.model = \"mydatamodel\", items = \"myitems\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_migrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Add attribute to existing items — item_migrate","title":"Add attribute to existing items — item_migrate","text":"Add attribute existing items","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_migrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add attribute to existing items — item_migrate","text":"","code":"item_migrate(items, name, type, fill = NA)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_migrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add attribute to existing items — item_migrate","text":"items data.frame items name character string attribute name type character string attribute type fill value (default = NA) used fill existing rows (see details)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_migrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add attribute to existing items — item_migrate","text":"updated items data.frame","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_migrate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add attribute to existing items — item_migrate","text":"fill coerced class name provided type vector given input fill, used: itemsname <- value Make sure vector length number rows, otherwise error raised R","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_migrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add attribute to existing items — item_migrate","text":"","code":"if (FALSE) { # \\dontrun{ item_migrate(items = myitems, name = \"comment\", type = \"character\", fill = \"none\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save data — item_save","title":"Save data — item_save","text":"Save data","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save data — item_save","text":"","code":"item_save(data, file = NULL)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save data — item_save","text":"data data.frame containing data saved file url file (including path & .csv extension)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save data — item_save","text":"File connector: file NULL, data saved .csv","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save data — item_save","text":"","code":"if (FALSE) { # \\dontrun{ # -- File connector: item_save(data = mydata, file = \"path/to/my/data/mydata.csv\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Items — item_search","title":"Search Items — item_search","text":"simple wrapper around filter function","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Items — item_search","text":"","code":"item_search(items, pattern)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Items — item_search","text":"items data.frame items pattern search pattern","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Items — item_search","text":"filtered data.frame","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Items — item_search","text":"function intended perform smart advanced search.  provides basic search across except id attributes. Basically returns filter(items, if_any(-(id), ~ grepl(pattern, .)))","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Items — item_search","text":"","code":"if (FALSE) { # \\dontrun{ item_search(items = mydata$items(), pattern = \"Banana\") item_search(items = mydata$items(), pattern = 25) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort items — item_sort","title":"Sort items — item_sort","text":"Sort items","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort items — item_sort","text":"","code":"item_sort(items, data.model)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort items — item_sort","text":"items data.frame items data.model data.frame, defining data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort items — item_sort","text":"data.frame items, sorted based data model","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort items — item_sort","text":"","code":"if (FALSE) { # \\dontrun{ item_sort(items, data.model) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update item — item_update","title":"Update item — item_update","text":"Update item","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update item — item_update","text":"","code":"item_update(items, item)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update item — item_update","text":"items data.frame items item item updated","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update item — item_update","text":"new data.frame items","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_update.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update item — item_update","text":"item$id value used replace corresponding item items data.frame","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/item_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update item — item_update","text":"","code":"if (FALSE) { # \\dontrun{ item_update(items = myitems, item = myupdateditem) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/items_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Items name — items_name","title":"Items name — items_name","text":"Items name","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/items_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Items name — items_name","text":"","code":"items_name(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/items_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Items name — items_name","text":"id id module server instance","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/items_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Items name — items_name","text":"name corresponding reactive value","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/items_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Items name — items_name","text":"","code":"items_name(id = \"mydata\") #> [1] \"mydata_items\""},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Module server — kitems","title":"Module server — kitems","text":"Module server","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module server — kitems","text":"","code":"kitems(id, path, autosave = TRUE, admin = FALSE, shortcut = FALSE)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Module server — kitems","text":"id id used module server instance path path data model items stored autosave logical whether item auto save activated (default = TRUE) admin logical indicating admin module server launched (default = FALSE) shortcut logical attribute shortcuts computed building item form (default = FALSE)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Module server — kitems","text":"module server returns list references accessible outside module. except id & url references reactive values. list(id, url, items, data_model, filtered_items, selected_items, clicked_column, filter_date, triggers = list(update))","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Module server — kitems","text":"autosave FALSE, item_save function used make data persistent. make data model persistent, use saveRDS function. file name consistent output dm_name function used id plus .rds extension. admin FALSE, admin_widget return 'empty' layout (tabs content) dynamic_sidebar affected parameter. expected function used admin = FALSE.","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Module server — kitems","text":"","code":"if (FALSE) { # \\dontrun{ kitems(id = \"mydata\", path = \"path/to/my/data\", autosave = TRUE) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems_admin.html","id":null,"dir":"Reference","previous_headings":"","what":"kitems Admin Server — kitems_admin","title":"kitems Admin Server — kitems_admin","text":"kitems Admin Server","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems_admin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kitems Admin Server — kitems_admin","text":"","code":"kitems_admin(k_data_model, k_items, path, dm_url, items_url, autosave)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems_admin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kitems Admin Server — kitems_admin","text":"k_data_model reference data model reactive value k_items reference item reactive value path path provided kitems server dm_url url data model file items_url url item file autosave autosave value passed kitems server","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/kitems_admin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kitems Admin Server — kitems_admin","text":"","code":"if (FALSE) { # \\dontrun{ kitems_admin( k_data_model = mydata$data_model, k_items = mydata$items, path = path, dm_url = dm_url, items_url = items_url, autosave = autosave) } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/restore.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore Data Model & Items Files — restore","title":"Restore Data Model & Items Files — restore","text":"Restore Data Model & Items Files","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/restore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore Data Model & Items Files — restore","text":"","code":"restore(id, path, type = \"items\")"},{"path":"https://thekangaroofactory.github.io/kitems/reference/restore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore Data Model & Items Files — restore","text":"id kitems id used create data model path path data model type type file backup. items (default) dm","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/restore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restore Data Model & Items Files — restore","text":"","code":"if (FALSE) { # \\dontrun{ restore(id = \"mydata\", path = \"path/to/mydata\", type = \"items\") restore(id = \"mydata\", path = \"path/to/mydata\", type = \"dm\") } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/runExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Shiny Demo Apps — runExample","title":"Run Shiny Demo Apps — runExample","text":"Run Shiny Demo Apps","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/runExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Shiny Demo Apps — runExample","text":"","code":"runExample(example = NA)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/runExample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Shiny Demo Apps — runExample","text":"example character value, name demo launched","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/runExample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Shiny Demo Apps — runExample","text":"example NA, function return names available apps","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/runExample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Shiny Demo Apps — runExample","text":"","code":"if (FALSE) { # \\dontrun{ runExample() } # }"},{"path":"https://thekangaroofactory.github.io/kitems/reference/update_widget.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Item Button — update_widget","title":"Update Item Button — update_widget","text":"Update Item Button","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/update_widget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Item Button — update_widget","text":"","code":"update_widget(id)"},{"path":"https://thekangaroofactory.github.io/kitems/reference/update_widget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Item Button — update_widget","text":"id server module id","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/update_widget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Item Button — update_widget","text":"rendered actionButton","code":""},{"path":"https://thekangaroofactory.github.io/kitems/reference/update_widget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Item Button — update_widget","text":"","code":"update_widget(id = \"mydata\") #> <span id=\"mydata-item_update\" class=\"shiny-html-output\"><\/span>"},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"kitems-v056-beta","dir":"Changelog","previous_headings":"","what":"kitems v0.5.6-beta","title":"kitems v0.5.6-beta","text":"milestone focuses item operations introduces shortcuts item creation","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"data-model-0-5-6","dir":"Changelog","previous_headings":"New features","what":"Data-model","title":"kitems v0.5.6-beta","text":"Check attribute name contain blank space (#336)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"items-0-5-6","dir":"Changelog","previous_headings":"New features","what":"Items","title":"kitems v0.5.6-beta","text":"Item creation protect duplicated id (#330) item_add secure item expected structure & types (#345) item_delete secure id parameter (#350) item add, update delete functions work reactive context (#347) item add, update & delete secured tryCatch (#351) Implement search function (#254) Implement value suggestion item creation inputs (#295)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"misc-0-5-6","dir":"Changelog","previous_headings":"New features","what":"Misc","title":"kitems v0.5.6-beta","text":"Implement backup / restore mechanism (#294) Cleanup range date_slider section (#338)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"documentation-0-5-6","dir":"Changelog","previous_headings":"New features","what":"Documentation","title":"kitems v0.5.6-beta","text":"Implement NEWS (#334) Implement pkgdown & GitHub Page CI (#331)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"bug-fix-0-5-6","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"kitems v0.5.6-beta","text":"Data model stored items migrated adding attribute (#324) Error trying migrate items new POSIXct attribute (#325) Need double check POSIXct column items conversion (#326) attributes get skip & filter set TRUE import (#329) item_search function needs use .data (#328) item_search throws warning tidyselect (#348)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"kitems-v055-beta","dir":"Changelog","previous_headings":"","what":"kitems v0.5.5-beta","title":"kitems v0.5.5-beta","text":"milestone focus code coverage","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"misc-0-5-5","dir":"Changelog","previous_headings":"New features","what":"Misc","title":"kitems v0.5.5-beta","text":"Remove DT package import Improve test coverage Implement R-CMD-check CI (GitHub action) Update codecov CI (GitHub action)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"kitems-v054-beta","dir":"Changelog","previous_headings":"","what":"kitems v0.5.4-beta","title":"kitems v0.5.4-beta","text":"milestone focus code architecture","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"data-model-0-5-4","dir":"Changelog","previous_headings":"New features","what":"Data-model","title":"kitems v0.5.4-beta","text":"Implement attribute_delete function (#309) Externalize delete data model functions(#308) Externalize attribute wizard module (#307)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"items-0-5-4","dir":"Changelog","previous_headings":"New features","what":"Items","title":"kitems v0.5.4-beta","text":"Reload items data model integrity check impacts (#306)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"misc-0-5-4","dir":"Changelog","previous_headings":"New features","what":"Misc","title":"kitems v0.5.4-beta","text":"Externalize import module (#312) Implement danger_zone_ui function (#310)","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"data-model-0-5-4-1","dir":"Changelog","previous_headings":"Bug fix","what":"Data-model","title":"kitems v0.5.4-beta","text":"Delete data model modal gets wrong confirmation string (#311)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"kitems-v053-beta","dir":"Changelog","previous_headings":"","what":"kitems v0.5.3-beta","title":"kitems v0.5.3-beta","text":"milestone focus code architecture","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"misc-0-5-3","dir":"Changelog","previous_headings":"New features","what":"Misc","title":"kitems v0.5.3-beta","text":"Implement admin parameter main server (#301) Homogenize input / output names (#288) Homogenize function names (#292) Externalize admin dedicated shiny module (#301) Code cleanup (#289) Test coverage (#299)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"kitems-v052-beta","dir":"Changelog","previous_headings":"","what":"kitems v0.5.2-beta","title":"kitems v0.5.2-beta","text":"milestone focus data-model","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"data-model-0-5-2","dir":"Changelog","previous_headings":"New features","what":"Data-model","title":"kitems v0.5.2-beta","text":"Implement modal wizard create update data model’s attribute (#281) Support arguments default_fun mechanism (#63) Implement multiple ordering data model definition (#239) Remove support POSIXlt class (#280) Improve support POSIXct class (timezone, form, persistence, ISO-8601) (#253) Implement delete data model (manage impacts) (#282) Deleting last attribute data model cleans data model & items (#273) Implement warning autosave turned (#283) Improve admin UI show module vs nested module call (#250)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"item-0-5-2","dir":"Changelog","previous_headings":"New features","what":"Item","title":"kitems v0.5.2-beta","text":"Check attribute type persistence load (POSIXct, ISO-8601) (#177)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"misc-0-5-2","dir":"Changelog","previous_headings":"New features","what":"Misc","title":"kitems v0.5.2-beta","text":"Remove standard view (#278) Update demo app demonstrate module call vs nested module call (#241)","code":""},{"path":[]},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"data-model-0-5-2-1","dir":"Changelog","previous_headings":"Bug fix","what":"Data-model","title":"kitems v0.5.2-beta","text":"Data model saved check integrity even autosave FALSE (#291)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"item-0-5-2-1","dir":"Changelog","previous_headings":"Bug fix","what":"Item","title":"kitems v0.5.2-beta","text":"Create button still available data model deleted (#290)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"misc-0-5-2-1","dir":"Changelog","previous_headings":"Bug fix","what":"Misc","title":"kitems v0.5.2-beta","text":"Deleting attribute date generates error filter / selected items (#287) Date_slider updated twice upon init app (#285) Reorder column called initializing admin UI (#284)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"kitems-v051-beta","dir":"Changelog","previous_headings":"","what":"kitems v0.5.1-beta","title":"kitems v0.5.1-beta","text":"minor revision focusing code cleanup, test & documentation","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"code-cleanup-0-5-1","dir":"Changelog","previous_headings":"","what":"Code cleanup","title":"kitems v0.5.1-beta","text":"Cleanup code (#275) Update kitems_names.R remove triggers, items, data model (#264) Remove hard coded parameters id (#219) Turn trigger_create function Remove r dependency update server signature (#276) Cleanup tests (#277)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"documentation-0-5-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"kitems v0.5.1-beta","text":"Update readme file module return value pattern (#263)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"kitems-v050-beta","dir":"Changelog","previous_headings":"","what":"kitems v0.5.0-beta","title":"kitems v0.5.0-beta","text":"major revision introducing module server return value (instead triggers)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"kitems v0.5.0-beta","text":"Implement module server return value (#257, #258) Remove / turn triggers functions (#259, #261, #262, #265)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"kitems v0.5.0-beta","text":"Ensure datetime continuity read / write (#269)","code":""},{"path":"https://thekangaroofactory.github.io/kitems/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"kitems v0.5.0-beta","text":"Crash trying delete latest attribute data model (#272) Data model admin table display attributes (#244) App crashes create logical attribute default value (#246) Update id attribute default function work (#248) Item file created even autosave FALSE creating data model admin UI (#271) Id get default function creating new data model (#249)","code":""}]
